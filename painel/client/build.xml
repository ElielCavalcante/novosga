<?xml version="1.0" encoding="UTF-8"?>
<project name="novosga-painel-client" default="dist" basedir=".">
    <description>Novo SGA Ant tasks - Painel Client</description>

    <property name="project" value="novosga" />    
    <property name="appname" value="${project}-painel" />
    <property name="src" location="src" />
    <property name="dist-files" location="dist-files" />
    <property name="dist" location="dist" />
    <property name="build" location="build" />
    <property name="build.classes" value="${build}/classes" />
    <property name="build.dist" value="${build}/dist" />
    <property name="build.dist.deb" value="${build.dist}/deb" />

    <!--
        init
    -->
    <target name="init" depends="clean" description="Cria pastas destino.">
        <mkdir dir="${dist}" />
        <mkdir dir="${build}" />
        <mkdir dir="${build.classes}" />
        <mkdir dir="${build.dist}" />
    </target>

    <!--
        compile
    -->
    <target name="compile" depends="init" description="Compila o código.">
        <javac destdir="${build.classes}" optimize="off" debug="on" source="1.5" target="1.5" nowarn="off" encoding="utf-8">
            <src path="${src}" />
        </javac>
    </target>

    <!--
        jar
    -->
    <target name="jar" depends="compile" description="Cria o arquivo jar">
        <copy todir="${build.dist}">
            <fileset dir="${dist-files}" />
        </copy>
        <replace file="${build.dist}/painel.bat" token="{distname}" value="${distname}" />
        <replace file="${build.dist}/painel.sh" token="{distname}" value="${distname}" />
        <!-- copying resources -->
        <property name="fonts.dir" value="org/novosga/painel/client/fonts" />
        <property name="ui.dir" value="org/novosga/painel/client/ui" />
        <copy todir="${build.classes}/${fonts.dir}">
            <fileset dir="${src}/${fonts.dir}">
                <include name="*.ttf" />
            </fileset>
        </copy>
        <copy todir="${build.classes}/${ui.dir}">
            <fileset dir="${src}/${ui.dir}">
                <include name="*.(png|fxml)" />
            </fileset>
        </copy>
        <jar destfile="${build.dist}/${distname}.jar">
            <fileset dir="${build.classes}" />
            <manifest>
                <attribute name="Main-Class" value="org.novosga.painel.Main" />
            </manifest>
        </jar>
        <copy todir="${build.dist}">
            <fileset dir="${build}">
                <include name="*.jar" />
            </fileset>
        </copy>
    </target>
    
    <!--
        dist: gera arquivo compactado para distribuicao no formato escolhido
    -->
    <target name="dist" description="Gera um arquivo compactado da aplicacao">
        <input message="Informe a versão:" addproperty="version" />
        <input message="Gerar arquivo em qual formato?" addproperty="dist-format" validargs="zip,tgz" defaultvalue="tgz" />
        <property name="distname" value="${appname}-client-${version}" />
        <antcall target="dist-${dist-format}" />
        <delete dir="${build}" />
    </target>

    <!--
        dist
    -->
    <target name="dist-tgz" depends="jar" description="Gera uma tgz do painel">
        <tar destfile="${dist}/${distname}.tgz" compression="gzip">
            <tarfileset dir="${build.dist}" mode="755" username="root" group="root" prefix="${distname}/">
            </tarfileset>
        </tar>
    </target>

    <!--
        dist-zip
    -->
    <target name="dist-zip" depends="jar" description="Gera uma zip do painel">
        <zip destfile="${dist}/${distname}.zip">
            <zipfileset dir="${build.dist}" prefix="${distname}">
            </zipfileset>
        </zip>
    </target>

    <!--
        dist-deb
    -->
    <target name="dist-deb" depends="jar" description="Gera um pacote debian do painel">
        <copy todir="${build.dist.deb}">
            <fileset dir="${dist-files}/linux/deb" />
        </copy>
        <copy todir="${build.dist.deb}/${appname}/usr/share/${appname}">
            <fileset dir="${build.dist}">
                <exclude name="**/deb/**" />
            </fileset>
        </copy>
        <exec dir="${build.dist.deb}" executable="chmod" output="${build}/mkpkg_chmod.out">
            <arg value="0555" />
            <arg value="${build.dist.deb}/${appname}/DEBIAN/postinst" />
        </exec>
        <exec dir="${build.dist.deb}" executable="sudo" output="${build}/mkpkg_chown.out" failonerror="false">
            <arg value="chown" />
            <arg value="-R" />
            <arg value="root:root" />
            <arg value="${build.dist.deb}/${appname}" />
        </exec>
        <exec dir="${build.dist.deb}" executable="dpkg-deb" output="${build}/mkpkg_dpkg-deb.out">
            <arg value="-b" />
            <arg value="${build.dist.deb}/${appname}" />
            <arg value="${distname}.deb" />
        </exec>
        <exec dir="${build.dist.deb}" executable="sudo" output="${build}/mkpkg_chown.out" failonerror="false">
            <arg value="chown" />
            <arg value="-R" />
            <arg value="${user.name}:${user.name}" />
            <arg value="${build.dist.deb}/${appname}" />
        </exec>
    </target>

    <!--
        clean
    -->
    <target name="clean" description="Limpa arquivos de saida">
        <delete dir="${dist}" />
        <delete dir="${build}" />
    </target>
</project>
